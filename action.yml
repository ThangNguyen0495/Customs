name: 'Android Emulator Setup'
description: 'Sets up an Android SDK, creates an emulator, and starts it.'
runs:
  using: 'composite'
  steps:
    - name: Enable KVM group permission for Linux runners
      if: runner.os == 'Linux'
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
      shell: bash

    - name: Install Android SDK
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          sudo apt-get update > /dev/null 2>&1
          sudo apt-get install -y wget unzip > /dev/null 2>&1
        else
          brew update > /dev/null 2>&1
          brew install wget unzip > /dev/null 2>&1
        fi
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip  > /dev/null 2>&1
        mkdir -p $HOME/android-sdk/cmdline-tools  > /dev/null 2>&1
        unzip commandlinetools-linux-8512546_latest.zip -d $HOME/android-sdk/cmdline-tools  > /dev/null 2>&1
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/tools  > /dev/null 2>&1
      shell: bash

    - name: Set up environment variables
      run: |
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
      shell: bash

    - name: Accept Android SDK licenses interactively
      run: yes | $HOME/android-sdk/cmdline-tools/tools/bin/sdkmanager --licenses  > /dev/null 2>&1 || true
      shell: bash

    - name: Configure and Resign qemu Binary
      if: runner.os == 'macOS'
      run: |
        sudo xcode-select --install || echo "Xcode Command Line Tools already installed"
        cd ~/Library/Android/sdk/emulator/qemu/darwin-x86_64
        cat <<EOF > entitlements.xml
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>com.apple.security.hypervisor</key>
            <true/>
        </dict>
        </plist>
        EOF
        codesign -s - --entitlements entitlements.xml --force ./qemu-system-x86_64
      shell: bash

    - name: Install SDK images
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          $HOME/android-sdk/cmdline-tools/tools/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0" "system-images;android-33;google_apis;x86_64" "emulator"  > /dev/null 2>&1
        else
          $HOME/android-sdk/cmdline-tools/tools/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0" "system-images;android-33;google_apis;arm64-v8a" "emulator"  > /dev/null 2>&1
        fi
      shell: bash

    - name: Create emulator
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          echo "no" | $HOME/android-sdk/cmdline-tools/tools/bin/avdmanager create avd -n emu -k "system-images;android-33;google_apis;x86_64" --device "pixel"  > /dev/null 2>&1
        else
          echo "no" | $HOME/android-sdk/cmdline-tools/tools/bin/avdmanager create avd -n emu -k "system-images;android-33;google_apis;arm64-v8a" --device "pixel"  > /dev/null 2>&1
        fi

      shell: bash

    - name: Start Android emulator
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
           nohup $HOME/android-sdk/emulator/emulator -avd emu -no-snapshot-save -no-boot-anim -wipe-data -no-window -gpu off &
        else
           nohup $HOME/android-sdk/emulator/emulator -avd emu -no-snapshot -no-window -no-audio -no-boot-anim &
        fi 
        $ANDROID_HOME/platform-tools/adb wait-for-device
      shell: bash

    - name: Check list devices
      run: |
        $ANDROID_HOME/platform-tools/adb devices
      shell: bash
