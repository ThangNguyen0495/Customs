name: 'Selenium Workflow Action'
description: 'Custom GitHub Action to run Selenium tests with Maven.'
inputs:
  artifact:
    description: 'The artifact to download. That is the test source code.'
    required: false

  test_config:
    description: 'The test configuration file to use.'
    required: true

  test_name:
    description: 'The name of the test suite.'
    required: true

  branch_name:
    description: 'The branch name to switch to.'
    required: false

  scripts:
    description: 'The maven commands to execute the test.'
    required: false
runs:
  using: 'composite'
  steps:
    - name: Download artifact
      if: ${{ inputs.artifact != '' }}
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact }}
        path: CheckoutFolder

    - name: Switch to another branch
      if: ${{ inputs.branch_name != '' }}
      run: |
        cd CheckoutFolder
        git checkout ${{ inputs.branch_name }}
      shell: bash

    - name: Checkout code
      if: ${{ inputs.artifact == '' }}
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '22'
        distribution: 'adopt'

    - name: Install FFmpeg
      run: sudo apt-get update && sudo apt-get install -y ffmpeg
      shell: bash

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-ubuntu
        restore-keys: |
          ${{ runner.os }}-maven-ubuntu

    - name: Install dependencies
      run: |
        if [ "${{ inputs.artifact }}" != "" ]; then
          cd CheckoutFolder
        fi
        mvn install -DskipTests
      shell: bash

    - name: Run tests
      run: |
        if [ "${{ inputs.artifact }}" != "" ]; then
          cd CheckoutFolder
        fi
        mvn --batch-mode test "-DsuiteFile=${{ inputs.test_config }}"
      shell: bash

    - name: Upload Test Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Test Reports - ${{ inputs.test_name }}
        path: |
          CheckoutFolder/target/BufferLog.
          CheckoutFolder/target/ExtentReport.html
          CheckoutFolder/recording_video

    - name: Remove cloned repo
      if: ${{ inputs.artifact != '' }}
      run: |
        rm -r CheckoutFolder
      shell: bash